2009-10-06 @ 22:31

- Ensure JSON-RPC Notifications suppress response (& client side doesn't care)
- Batch JSON-RPC request/responses
- Async JSON-RPC request processing

- Async pages / controls

- <%# .... %> fails inside textareas?
- verify that &nbsp; is not being normalized
- fix jbst:control bindings so data & name literals are emitted as code expressions
	e.g. data="this.data.items" is equivalent to data="<%= this.data.items %>"
- replace alert/confirm with window.onerror calls in release mode
- replace regex in rpc proxies with actual name check methods
- rework bindings to fire after insert?
- add JsonFx.Bindings.one which removes once fired (leverage for server jbst:control)

- explain JSON-RPC callback examples
- explain difference between JsonFx.UI.Binding vs. jQuery.ready
- explain how to switch templates in list JBSTs
- explain using Linq in JSON-RPC
- explain inserting markup data into JBST

- configurable expires for globalization handler?

- add anonymous templates inside server jbst:control
	- just parse on the fly?
	- default inner property for default content?
- figure out a way to custom serialize objects which are closed source (e.g. BCL)
- add use of custom type descriptors to define properties (e.g. convert a Dictionary to object)
- BUG: dictionaries without keys round-trip-able as strings should be rendered as key-value lists

- create build provider for generating a list of localization values
- client-side localization: add support for <%= Resources.Foo.Bar %>
- emit CSS merge as imports during debug
- add CDN support to JsonFx:ResourceInclude (e.g. Google AJAX APIs)
- add VS2K8 IntelliSense support for JsonFx libs:
	- add XML comments
	- ease the burden of adding VS Script resource include tags

- consolidate type loading logic (see System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(string))
- resolve "~/" vs. HostingEnvironment.AppVirtualPath
- fully support Mod_mono Apache hosting
- Create a Google Code repository
	- http://code.google.com/hosting/createProject
	- use svnsync to import an existing repository (http://code.google.com/p/support/wiki/FAQ#Subversion)
- build jQuery plugin for JsonML / JSBT

___________________________________________________________________________________

- JavaScript IntelliSense
	- Flesh out the JsonFx IntelliSense story
	- add Doc comments to all JsonFx scripts
	- http://blogs.msdn.com/webdevtools/archive/2008/11/18/jscript-intellisense-faq.aspx
	- http://blogs.msdn.com/webdevtools/archive/2007/03/02/jscript-intellisense-in-orcas.aspx
	- http://weblogs.asp.net/bleroy/archive/2007/04/23/the-format-for-javascript-doc-comments.aspx
	- http://blogs.msdn.com/webdevtools/archive/2007/11/06/jscript-intellisense-a-reference-for-the-reference-tag.aspx
	- http://blogs.msdn.com/webdevtools/archive/tags/IntelliSense/default.aspx

- customize VS templates
	http://msdn.microsoft.com/en-us/library/ms185314(VS.80).aspx
	http://msdn.microsoft.com/en-us/library/ms246580(VS.80).aspx
	http://msdn.microsoft.com/en-us/magazine/cc188697.aspx

- enumerate available L10n languages:
	http://blogs.msdn.com/michkap/archive/2006/03/25/560838.aspx

- Plug-Ins via reflection
	http://msdn.microsoft.com/en-us/magazine/cc163759.aspx

- create documentation
	see: http://msdn.microsoft.com/en-us/library/ms524716.aspx
	see: http://www.jsptut.com/
	see: http://java.sun.com/products/jsp/pdf/card11.pdf
	see: http://domscripting.com/presentations/fowa07/slides/03_data_formats.html

- define mechanism for loading scripts with dependencies

- Move History & Animation to Options object (onChange? onComplete)

- Check out competition (http://www.daniel-zeiss.de/AJAXComparison/Results.htm)

- add support wrapper for responseXML? (http://domscripting.com/presentations/fowa07/slides/03_data_formats.html(

- Add callbacks to Animate (onBeforeStart, onEachStep, onAfterStop), (http://wiki.script.aculo.us/scriptaculous/show/CoreEffects)
- Change Animation speed to be seconds based? fps?

- Add IFrame support for downlevel browsers? (http://ajaxpatterns.org/archive/XMLHttpRequest_Call.php)
- Add <script> tag hack support for cross-domain? (http://domscripting.com/presentations/fowa07/slides/03_data_formats.html)
- Add messaging framework

- Implement centralized error handling

- Implement arrays for arguments in JSON-RPC for server-side HTTP GET.
- Convert reader so can read from stream rather than from complete string
- add SAX-style parsing option for JSON
	- http://www.p6r.com/articles/2008/05/22/a-sax-like-parser-for-json/
	- http://www.saxproject.org/event.html
	- http://en.wikipedia.org/wiki/Simple_API_for_XML

____________________________

Internet Explorer < 7

Must use ActiveXObject() constructor function to create an
XMLHttpRequest object. And must try different ways

new ActiveXObject("Msxml2.XMLHTTP.3.0");
new ActiveXObject("Msxml2.XMLHTTP");
new ActiveXObject("Microsoft.XMLHTTP");



Internet Explorer 6
Windows XP SP2

When the server response stored in xhr.responseText is very big
Internet Explorer noticably leaks memory. The solution is after the
code is finished with xhr either set xhr.onreadystatechange to an empty
function with a clean closure or to set xhr to null.

(http://groups.google.com/group/comp.lang.javascript/msg/556048483801bd96)



Netscape Navigator 6.1
Windows XP SP2

This is the first Netscape browser with the XMLHttpRequest()
constructor function. However it returns an object that is non
functional.



Netscape Navigator 6.2, 6.2.3
Windows XP SP2

The XMLHttpRequest objects are capable of GET and POST requests but the
xhr.send() function cannot be sent any argument other than null. If you
attempt to send a body as the argument to send the browser throws an
error.



Netscape Navigator 7.0 & 7.1
Windows XP SP2

When the server response stored in xhr.responseText is very big these
two versions of Navigator noticably leak memory. The known fixes for
the Internet Explorer memory leaks do not stop these problems.



Netscape Navigator 7.0
Windows XP SP2

If you want to set the "Accept" header of your XMLHttpRequest object
before sending the request to the server you are not getting a blank
canvas. When the XMLHttpRequest object is created it already has a
value for the Accept header. If you call

xhr.setRequestHeader("Accept", "text/javascript");

then this will not overwrite the original Accept header. Instead the
original header will have a comma and space appended followed by the
new header.



Netscape Navigator <=7.1 && Firefox <=1.5
Windows XP SP2

Cannot make POST requests to URLs starting with localhost or to local
IP addresses. To test in these browsers the site must be live somewhere
out there on the web.



Firefox 1.5
When abort() is called a readyState 4 event is fired which is a
disaster. The "aborted" flag is a workaround to avoid having callbacks
fired when a request is aborted.

The Quirksmode website says that IE has this same bug and given the
date of writing it likely refers to IE 6.
(http://www.quirksmode.org/blog/archives/2005/09/xmlhttp_notes_a_1.html)



Opera 8.0

Opera 8 XMLHttpRequest objects don't have the setRequestHeader()
function and although the browser seems to be able to make a POST
request with a body without this function (and so without the usual
Content-Type = "application/x-www-form-urlencoded"). Note Opera 8.0.1
does have setRequestHeader() and can POST



Opera 8.51-8.53,8.54?
Windows XP SP2
If the server response Content-Type header is "text/plain" or
"text/html" then all seems well. If it is "text/javascript" then the
xhr.responseText is garbled. It looks like a bunch of little squares
when printed. To feature test requires a test request sent to the
server and the response analysed. Probably not what you want to do
except in the most critical app on earth.



Opera 8.01, 9.10
Windows XP SP2

If the server sends a large response Opera's CPU useage rails at 100%
for a long time. Theses browsers are *very* slow to accept the
response.



iCab 3.0.3
Mac OS X 10.4.8
xhr.getResponseHeader() always returns an empty string however
xhr.getAllResponseHeaders() works. Here is a possible work around to
check if the Content-Type header is text/javascript or
application/javascript.

xhr.getResponseHeader("Content-Type").match(/(text|application)\/javascript/)
||
xhr.getAllResponseHeaders().match(/Content-Type\:\s(text|application)\/javascript/);



General Hearsay

Rumor has it that at least one browser caches GET requests made with an
XMLHttpRequest object. To avoid using any cached response add a unique
dummy id parameter as a query string to the URL to make it different
than all previous URLs and hence insure the specific new request has
never been cached.


Rumor has it that sometimes Firefox/Mozilla will throw an error when
accessing xhr.status and the Yahoo! UI library was the place I saw this.